openapi: 3.0.3
info:
  title: AI Results Service
  description: |-
    AI results service is in charge of running complex models and algorithms to extract insights from patient images.
  version: 0.0.1
tags:
  - name: Analysis
    description: The results of running a certain algorithm/model.
  - name: Models
    description: The available models and algorithms.
servers:
  - url: https://prod.bric-lungs.com/api/
    description: Production server
  - url: https://beta.bric-lungs.com/api/
    description: Staging server
  - url: https://<devId>.dev.bric-lungs.com/api/
    description: Development server
security:
   - ApiKey: []
paths:
  /models:
    get:
      tags:
        - Models
      summary: Get all available models/algorithms.
      description: Retrieves a list of models which can be run as part of this service.
      operationId: getModels
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
  /analysis:
    post:
      tags:
        - Analysis
      summary: Request a new AI analysis
      description: Trigger the execution of an algorithm with some inputs.
      operationId: postAnalysis
      requestBody:
        description: Send the algorithm you want to run, as well as its inputs.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAnalysisBody'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '400':
          description: Invalid schema, model does not exist.
        '401':
          description: Missing or invalid Authorization header.
        '403':
          description: Analysis is not owned by your center or imaging test does not belong to your center.
        '429':
          description: Quota limit exceeded.
  /analysis/{id}:
    delete:
      tags:
        - Analysis
      summary: Cancels or removes an AI analysis
      description: If the AI analysis was still pending, it cancels it. If the AI analysis had completed, it removes it.
      operationId: deleteAnalysis
      parameters:
        - name: id
          in: path
          description: 'id of the Analysis'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cancelled or removed.
        '404':
          description: Invalid id.
        '401':
          description: Missing or invalid Authorization header.
        '403':
          description: Analysis is not owned by your center.
    get:
      tags:
        - Analysis
      summary: Get the results of an AI analysis
      description: Retrieves the result or progress of an AI analysis.
      operationId: getAnalysis
      parameters:
        - name: id
          in: path
          description: 'id of the Analysis'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '404':
          description: Invalid id.
        '403':
          description: Analysis is not owned by your center.
  
components:
  schemas:
    Model:
      required:
        - id
        - description
      type: object
      properties:
        id:
          type: string
          example: 31bd5132-c683-4e66-ac7c-62c8f2dd5bc6
        description:
          type: string
          example: Lung nodule detection.
    Models:
      required:
        - models
      type: object
      properties:
        models:
          type: array
          items: 
            $ref: '#/components/schemas/Model'
    PostAnalysisBody:
      required:
        - modelId
      type: object
      properties:
        modelId:
          type: string
          example: 31bd5132-c683-4e66-ac7c-62c8f2dd5bc6
        parameters:
          type: object
          example: {}
        imagingTests:
          type: array
          items:
            $ref: '#/components/schemas/ImagingTest'
    ImagingTest:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          example: 024cedd9-06bd-40c1-a6f6-ed1f7078da01
    Analysis:
      required:
        - id
        - modelId
        - status
      type: object
      properties:
        id:
          type: string
          example: 39b30df5-2b40-4396-8452-9b456aaadd48
        modelId:
          type: string
          example: 31bd5132-c683-4e66-ac7c-62c8f2dd5bc6
        status:
          type: string
          example: done
          enum: [done, enqueued, error, invalid]
        parameters:
          type: object
          example: {}
        results:
          type: object
          example: {}
        imagingTests:
          type: array
          items:
            $ref: '#/components/schemas/ImagingTest'
  securitySchemes:
    ApiKey:
       type: apiKey
       name: Authorization
       in: header
       description: 'Cognito ID token.' 
